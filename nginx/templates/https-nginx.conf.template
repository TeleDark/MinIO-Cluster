upstream minio
	{
		server minio1:9000;
		server minio2:9000;
		server minio3:9000;
		server minio4:9000;
	}

upstream console
	{
		ip_hash;
		server minio1:9001;
		server minio2:9001;
		server minio3:9001;
		server minio4:9001;
	}

server
{
	listen ${MINIO_HTTPS_API} ssl;
	listen [::]:${MINIO_HTTPS_API} ssl;
	server_name ${DOMAIN};

	ssl_certificate /letsencrypt/live/${DOMAIN}/fullchain.pem;
	ssl_certificate_key /letsencrypt/live/${DOMAIN}/privkey.pem;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers AES-GCM:AES-256-CBC:AES-128-CBC:SHA256:SHA;
	ssl_session_cache shared:SSL:1m;

	# To allow special characters in headers
	ignore_invalid_headers off;
	# Allow any size file to be uploaded.
	# Set to a value such as 1000m; to restrict file size to a specific value
	client_max_body_size 0;
	# To disable buffering
	proxy_buffering off;
	proxy_request_buffering off;

	location /
	{
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_connect_timeout 300;
		# Default is HTTP/1, keepalive is only enabled in HTTP/1.1
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		chunked_transfer_encoding off;

		proxy_pass http://minio;
	}
}

server 
{
	listen 80;
	server_name ${DOMAIN};
	access_log  /dev/null;
	error_log   /dev/null;
	return 301 https://$host$request_uri;
}
server
{
	listen ${NGINX_HTTPS_PORT} ssl;
	listen [::]:${NGINX_HTTPS_PORT} ssl;
	server_name ${DOMAIN};

	ssl_certificate /letsencrypt/live/${DOMAIN}/fullchain.pem;
	ssl_certificate_key /letsencrypt/live/${DOMAIN}/privkey.pem;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers AES-GCM:AES-256-CBC:AES-128-CBC:SHA256:SHA;
	ssl_session_cache shared:SSL:1m;

	# To allow special characters in headers
	ignore_invalid_headers off;
	# Allow any size file to be uploaded.
	# Set to a value such as 1000m; to restrict file size to a specific value
	client_max_body_size 0;
	# To disable buffering
	proxy_buffering off;
	proxy_request_buffering off;

	location /
	{
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-NginX-Proxy true;

		# This is necessary to pass the correct IP to be hashed
		real_ip_header X-Real-IP;

		proxy_connect_timeout 300;

		# To support websocket
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";

		chunked_transfer_encoding off;

		proxy_pass http://console;
	}
}